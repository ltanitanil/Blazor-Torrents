@page "/"
@page "/torrents"
@inject IAppStateService state


<Blazor.Client.Shared.SearchAndFilterPanel GetTorrentsList=@LoadTorrentsAsync GetData=@state.GetDataToFilter Criteria=@Criteria />
@if (TorrentsModel != null)
{
    @if (TorrentsModel.Torrents.Any())
    {
        <div class="torrents-model">
            <Blazor.Client.Shared.TorrentsList TorrentsModel=@TorrentsModel.Torrents />
            <Blazor.Client.Shared.Pagination PaginationModel=@TorrentsModel.PaginationInfo GetTorrentsList=@LoadTorrentsAsync />
        </div>
    }
    else
    {
        <div class="not-found">Список пуст...</div>
    }
}
else
{
    <Loader />
}


@code{
    private TorrentsViewModel TorrentsModel { get; set; }
    private SearchAndFilterCriteria Criteria { get; set; } = new SearchAndFilterCriteria();

    protected override async Task OnInitAsync()
    {
        await LoadTorrentsAsync();
    }

    private async Task LoadTorrentsAsync(int page = 0)
    {
        TorrentsModel = null;
        StateHasChanged();
        TorrentsModel = await state.GetTorrentsAsync(Criteria, page);
        StateHasChanged();
    }

}