@namespace Blazor.Shared.ViewModels.Search
@using Syncfusion.EJ2.RazorComponents.Calendars
@using Syncfusion.EJ2.RazorComponents.Inputs


<div>
    <EditForm Model=@Criteria OnValidSubmit="@(async()=>await GetTorrentsList(0))">
        <div style="display:flex; flex-wrap:wrap;justify-content:space-between;">
            <div style="display:flex; flex-wrap:wrap;">
                <span><img src="/images/kisspng-computer-icons-torrent-file-desktop-wallpaper-desk-neon-retro-arcade-pasadena-5b1c784d588a20.3808463115285924613627.png" style="width:100px;" /></span>
                <a href="/" class="sa-torrents-title">Каталог торрентов</a>
            </div>
            <div class="input-group" style="max-width:362px;">
                <input type="search" @bind=@Criteria.SearchText placeholder="Найти..." style="border:none;color:white;background-color:#1f8a50;height:65px;" />
                <div class="input-group-append" style="background:#1f8a50;max-height:65px;">
                    <button class="btn btn-secondary" type="button" style="border:none;background-color:white;border-radius:unset;min-width:65px;">
                        <i class="fa fa-search" style="color:#1f8a50;font-size: 35px;"></i>
                    </button>
                </div>
            </div>
        </div>
        @if (Data != null)
        {
        @Data.TorrentMaxSize
        <div style="border:1px solid #0094ff;">
            <EjsSlider ID="rangeValue2" Min="0" Max=@Data.TorrentMaxSize type=SliderType.Range Value="@rangeValue" Changed=@((e) => SliderChange(e.Value))></EjsSlider>
        </div>
        <div style="border:1px solid #0094ff;">
            <EjsDateRangePicker id='daterangepicker' min='@minDate' max='@maxDate' Change=@((e) => DateChange(e.Value))> </EjsDateRangePicker>
        </div>
        <select @onchange=@ForumsClicked>
            <option>Все</option>
            @foreach (var forum in Data.Forums)
            {
            <option value=@forum.Id>@forum.Value</option>
            }
        </select>
        }
        else
        {
        <div>Загрузка...</div>
        }
        <button>Применить</button>
    </EditForm>
</div>
@code{
    [Parameter] Func<Task<SearchAndFilterData>> GetData { get; set; }
    [Parameter] protected SearchAndFilterCriteria Criteria { get; set; }
    [Parameter] Func<int, Task> GetTorrentsList { get; set; }

    private SearchAndFilterData Data { get; set; }

    long[] rangeValue;
    object tooltip = new { showOn = "Always", isVisible = "true", placement = "Before" };

    public DateTime minDate { get; set; } = new DateTime(2005, 5, 1);
    public DateTime maxDate { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);

    protected override async Task OnInitAsync()
    {
        Data = await GetData();
        rangeValue = new long[] { 0, Data.TorrentMaxSize };
    }

    void SliderChange(object value)
    {
        var temp = SplitValue(value);
        Criteria.Size.From = long.Parse(temp.ElementAt(0));
        Criteria.Size.To = long.Parse(temp.ElementAt(1));
    }

    void DateChange(object value)
    {
        var temp = SplitValue(value);
        Criteria.Date.From = DateTimeOffset.Parse(temp.ElementAt(0));
        Criteria.Date.To = DateTimeOffset.Parse(temp.ElementAt(1));
    }

    IEnumerable<string> SplitValue(object value)
    {
        return value.ToString().Split(new[] { '[', ']', ',', '"' }).Where(x => !string.IsNullOrWhiteSpace(x));
    }

    protected void ForumsClicked(UIChangeEventArgs forumEvent)
    {
        Criteria.SelectedForumId = Int32.TryParse(forumEvent.Value.ToString(), out var tempVal) ? tempVal : (int?)null;
    }

}

